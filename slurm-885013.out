Resetting modules to system default
2018-07-20 09:49:47.516239: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 0 with properties: 
name: Tesla K20Xm major: 3 minor: 5 memoryClockRate(GHz): 0.732
pciBusID: 0000:20:00.0
totalMemory: 5.57GiB freeMemory: 5.35GiB
2018-07-20 09:49:47.673878: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 1 with properties: 
name: Tesla K20Xm major: 3 minor: 5 memoryClockRate(GHz): 0.732
pciBusID: 0000:8b:00.0
totalMemory: 5.57GiB freeMemory: 5.48GiB
2018-07-20 09:49:47.674002: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1435] Adding visible gpu devices: 0, 1
2018-07-20 09:49:48.358619: I tensorflow/core/common_runtime/gpu/gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:
2018-07-20 09:49:48.358720: I tensorflow/core/common_runtime/gpu/gpu_device.cc:929]      0 1 
2018-07-20 09:49:48.358751: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 0:   N N 
2018-07-20 09:49:48.358773: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 1:   N N 
2018-07-20 09:49:48.359215: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 5140 MB memory) -> physical GPU (device: 0, name: Tesla K20Xm, pci bus id: 0000:20:00.0, compute capability: 3.5)
2018-07-20 09:49:48.407091: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 5273 MB memory) -> physical GPU (device: 1, name: Tesla K20Xm, pci bus id: 0000:8b:00.0, compute capability: 3.5)
you are in main.
recurrent neural network
Train on 1560 samples, validate on 240 samples
Epoch 1/17
 - 4s - loss: 4.0038 - binary_accuracy: 0.7679 - val_loss: 3.4389 - val_binary_accuracy: 0.7875
Epoch 2/17
 - 1s - loss: 3.9438 - binary_accuracy: 0.8782 - val_loss: 3.4458 - val_binary_accuracy: 0.7875
Epoch 3/17
 - 1s - loss: 3.9475 - binary_accuracy: 0.8782 - val_loss: 3.4465 - val_binary_accuracy: 0.7875
Epoch 4/17
 - 1s - loss: 3.9471 - binary_accuracy: 0.8782 - val_loss: 3.4452 - val_binary_accuracy: 0.7875
Epoch 5/17
 - 1s - loss: 3.9456 - binary_accuracy: 0.8782 - val_loss: 3.4435 - val_binary_accuracy: 0.7875
Epoch 6/17
 - 1s - loss: 3.9439 - binary_accuracy: 0.8782 - val_loss: 3.4419 - val_binary_accuracy: 0.7875
Epoch 7/17
 - 1s - loss: 3.9424 - binary_accuracy: 0.8782 - val_loss: 3.4406 - val_binary_accuracy: 0.7875
Epoch 8/17
 - 1s - loss: 3.9411 - binary_accuracy: 0.8782 - val_loss: 3.4394 - val_binary_accuracy: 0.7875
Epoch 9/17
 - 1s - loss: 3.9400 - binary_accuracy: 0.8782 - val_loss: 3.4384 - val_binary_accuracy: 0.7875
Epoch 10/17
 - 1s - loss: 3.9391 - binary_accuracy: 0.8782 - val_loss: 3.4375 - val_binary_accuracy: 0.7875
Epoch 11/17
 - 1s - loss: 3.9383 - binary_accuracy: 0.8782 - val_loss: 3.4368 - val_binary_accuracy: 0.7875
Epoch 12/17
 - 1s - loss: 3.9376 - binary_accuracy: 0.8782 - val_loss: 3.4362 - val_binary_accuracy: 0.7875
Epoch 13/17
 - 1s - loss: 3.9370 - binary_accuracy: 0.8782 - val_loss: 3.4356 - val_binary_accuracy: 0.7875
Epoch 14/17
 - 1s - loss: 3.9365 - binary_accuracy: 0.8782 - val_loss: 3.4351 - val_binary_accuracy: 0.7875
Epoch 15/17
 - 1s - loss: 3.9361 - binary_accuracy: 0.8782 - val_loss: 3.4347 - val_binary_accuracy: 0.7875
Epoch 16/17
 - 1s - loss: 3.9357 - binary_accuracy: 0.8782 - val_loss: 3.4344 - val_binary_accuracy: 0.7875
Epoch 17/17
 - 1s - loss: 3.9353 - binary_accuracy: 0.8782 - val_loss: 3.4340 - val_binary_accuracy: 0.7875
ML_NN_algorithms_RNN.py:6: UserWarning: 
This call to matplotlib.use() has no effect because the backend has already
been chosen; matplotlib.use() must be called *before* pylab, matplotlib.pyplot,
or matplotlib.backends is imported for the first time.

The backend was *originally* set to 'TkAgg' by the following code:
  File "ML_NN_algorithms_RNN.py", line 5, in <module>
    import seaborn as sns
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/seaborn/__init__.py", line 6, in <module>
    from .rcmod import *
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/seaborn/rcmod.py", line 8, in <module>
    from . import palettes, _orig_rc_params
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/seaborn/palettes.py", line 12, in <module>
    from .utils import desaturate, set_hls_values, get_color_cycle
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/seaborn/utils.py", line 11, in <module>
    import matplotlib.pyplot as plt
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/matplotlib/pyplot.py", line 71, in <module>
    from matplotlib.backends import pylab_setup
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/matplotlib/backends/__init__.py", line 16, in <module>
    line for line in traceback.format_stack()


  matplotlib.use('Agg')
/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
Using TensorFlow backend.
Traceback (most recent call last):
  File "ML_NN_algorithms_RNN.py", line 373, in <module>
    recurrNN, rnnAUROC = rnn([20,60],kernel, pool, strideC, strideP, dropout, 0.123, momentum, 1.0e-4, boolNest,True, boolAdam,beta_1, beta_2, epsilon, amsgrad, 17, train_data2, train_label, dev_data2, dev_label,outputSearch, i, batch, w)
  File "ML_NN_algorithms_RNN.py", line 282, in rnn
    makePlots(recur_hist, outputFile, "LSTM Neural Net", fpr_train, tpr_train, fpr_dev, tpr_dev, train_pred, dev_pred)
  File "ML_NN_algorithms_RNN.py", line 106, in makePlots
    plt.plot(model_hist.epoch, model_hist.history["val_loss"], label="validation")
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/matplotlib/pyplot.py", line 3347, in plot
    ax = gca()
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/matplotlib/pyplot.py", line 984, in gca
    return gcf().gca(**kwargs)
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/matplotlib/pyplot.py", line 601, in gcf
    return figure()
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/matplotlib/pyplot.py", line 548, in figure
    **kwargs)
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/matplotlib/backend_bases.py", line 161, in new_figure_manager
    return cls.new_figure_manager_given_figure(num, fig)
  File "/glade/u/home/joshuadr/tensor_test/lib/python3.6/site-packages/matplotlib/backends/_backend_tk.py", line 1044, in new_figure_manager_given_figure
    window = Tk.Tk(className="matplotlib")
  File "/glade/u/apps/dav/opt/python/3.6.4/intel/17.0.1/lib/python3.6/tkinter/__init__.py", line 2017, in __init__
    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)
_tkinter.TclError: no display name and no $DISPLAY environment variable
